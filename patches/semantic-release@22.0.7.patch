diff --git a/index.js b/index.js
index 67877fb4b347a5e7c9a0b221a6447fa3d2ab2e95..c557f71d7179b1dd1f4a827ca9de0fb872e6ceb0 100644
--- a/index.js
+++ b/index.js
@@ -21,7 +21,6 @@ import getError from "./lib/get-error.js";
 import { COMMIT_EMAIL, COMMIT_NAME } from "./lib/definitions/constants.js";
 
 const require = createRequire(import.meta.url);
-const pkg = require("./package.json");
 
 let markedOptionsSet = false;
 async function terminalOutput(text) {
@@ -266,7 +265,7 @@ export default async (cliOptions = {}, { cwd = process.cwd(), env = process.env,
     envCi: envCi({ env, cwd }),
   };
   context.logger = getLogger(context);
-  context.logger.log(`Running ${pkg.name} version ${pkg.version}`);
+  context.logger.log(`Running Storm Semantic Release version 22.0.7`);
   try {
     const { plugins, options } = await getConfig(context, cliOptions);
     options.originalRepositoryURL = options.repositoryUrl;
diff --git a/lib/definitions/errors.js b/lib/definitions/errors.js
index 9df955dd7d276ed95ee8b9583d3ee7a9612c5b31..b91aea12d1229abaa91702a7c246bd6906ba901f 100644
--- a/lib/definitions/errors.js
+++ b/lib/definitions/errors.js
@@ -4,12 +4,11 @@ import { isString, toLower, trim } from "lodash-es";
 import { RELEASE_TYPE } from "./constants.js";
 
 const require = createRequire(import.meta.url);
-const pkg = require("../../package.json");
+console.log(`Semantic Release - import.meta.url: "${import.meta.url}"`);
 
-const [homepage] = pkg.homepage.split("#");
 const stringify = (object) =>
   isString(object) ? object : inspect(object, { breakLength: Infinity, depth: 2, maxArrayLength: 5 });
-const linkify = (file) => `${homepage}/blob/master/${file}`;
+const linkify = (file) => `https://github.com/semantic-release/semantic-release/blob/master/${file}`;
 const wordsList = (words) =>
   `${words.slice(0, -1).join(", ")}${words.length > 1 ? ` or ${words[words.length - 1]}` : trim(words[0])}`;
 
@@ -118,7 +117,7 @@ export function EANALYZECOMMITSOUTPUT({ result, pluginName }) {
 The \`analyzeCommits\` function of the \`${pluginName}\` returned \`${stringify(result)}\` instead.
 
 We recommend to report the issue to the \`${pluginName}\` authors, providing the following informations:
-- The **semantic-release** version: \`${pkg.version}\`
+- The **semantic-release** version: \`22.0.7\`
 - The **semantic-release** logs from your CI job
 - The value returned by the plugin: \`${stringify(result)}\`
 - A link to the **semantic-release** plugin developer guide: [${linkify("docs/developer-guide/plugin.md")}](${linkify(
@@ -135,7 +134,7 @@ export function EGENERATENOTESOUTPUT({ result, pluginName }) {
 The \`generateNotes\` function of the \`${pluginName}\` returned \`${stringify(result)}\` instead.
 
 We recommend to report the issue to the \`${pluginName}\` authors, providing the following informations:
-- The **semantic-release** version: \`${pkg.version}\`
+- The **semantic-release** version: \`22.0.7\`
 - The **semantic-release** logs from your CI job
 - The value returned by the plugin: \`${stringify(result)}\`
 - A link to the **semantic-release** plugin developer guide: [${linkify("docs/developer-guide/plugin.md")}](${linkify(
@@ -152,7 +151,7 @@ export function EPUBLISHOUTPUT({ result, pluginName }) {
 The \`publish\` function of the \`${pluginName}\` returned \`${stringify(result)}\` instead.
 
 We recommend to report the issue to the \`${pluginName}\` authors, providing the following informations:
-- The **semantic-release** version: \`${pkg.version}\`
+- The **semantic-release** version: \`22.0.7\`
 - The **semantic-release** logs from your CI job
 - The value returned by the plugin: \`${stringify(result)}\`
 - A link to the **semantic-release** plugin developer guide: [${linkify("docs/developer-guide/plugin.md")}](${linkify(
@@ -169,7 +168,7 @@ export function EADDCHANNELOUTPUT({ result, pluginName }) {
 The \`addChannel\` function of the \`${pluginName}\` returned \`${stringify(result)}\` instead.
 
 We recommend to report the issue to the \`${pluginName}\` authors, providing the following informations:
-- The **semantic-release** version: \`${pkg.version}\`
+- The **semantic-release** version: \`22.0.7\`
 - The **semantic-release** logs from your CI job
 - The value returned by the plugin: \`${stringify(result)}\`
 - A link to the **semantic-release** plugin developer guide: [${linkify("docs/developer-guide/plugin.md")}](${linkify(
diff --git a/lib/get-config.js b/lib/get-config.js
index aa119f302d147ac12960871ad8150623bc089911..5f021b44636a0c5c8275af1231d5e093b8035618 100644
--- a/lib/get-config.js
+++ b/lib/get-config.js
@@ -1,5 +1,6 @@
-import { dirname, extname } from "node:path";
+import { dirname, resolve } from "node:path";
 import { fileURLToPath } from "node:url";
+import { createRequire } from "node:module";
 
 import { castArray, isNil, isPlainObject, isString, pickBy } from "lodash-es";
 import { readPackageUp } from "read-pkg-up";
@@ -13,6 +14,7 @@ import { parseConfig, validatePlugin } from "./plugins/utils.js";
 
 const debug = debugConfig("semantic-release:config");
 const __dirname = dirname(fileURLToPath(import.meta.url));
+const require = createRequire(import.meta.url);
 
 const CONFIG_NAME = "release";
 
@@ -33,17 +35,7 @@ export default async (context, cliOptions) => {
     options = {
       ...(await castArray(extendPaths).reduce(async (eventualResult, extendPath) => {
         const result = await eventualResult;
-        const resolvedPath = resolveFrom.silent(__dirname, extendPath) || resolveFrom(cwd, extendPath);
-        const importAssertions =
-          extname(resolvedPath) === ".json"
-            ? {
-                assert: {
-                  type: "json",
-                },
-              }
-            : undefined;
-
-        const { default: extendsOptions } = await import(resolvedPath, importAssertions);
+        const extendsOptions = await import(resolveFrom.silent(__dirname, extendPath) || resolveFrom(cwd, extendPath));
 
         // For each plugin defined in a shareable config, save in `pluginsPath` the extendable config path,
         // so those plugin will be loaded relative to the config file
@@ -51,11 +43,17 @@ export default async (context, cliOptions) => {
           .filter(([, value]) => Boolean(value))
           .reduce((pluginsPath, [option, value]) => {
             castArray(value).forEach((plugin) => {
+              console.info("Processing Plugin:\n");
+              console.info(plugin);
+              
               if (option === "plugins" && validatePlugin(plugin)) {
                 pluginsPath[parseConfig(plugin)[0]] = extendPath;
               } else if (
                 PLUGINS_DEFINITIONS[option] &&
-                (isString(plugin) || (isPlainObject(plugin) && isString(plugin.path)))
+                (plugin && 
+                  (isString(plugin) || 
+                    (isPlainObject(plugin) && 
+                    isString(plugin.path))))
               ) {
                 pluginsPath[isString(plugin) ? plugin : plugin.path] = extendPath;
               }
