                                                                                diff --git a/dist/loaders.js b/dist/loaders.js
index b71d7fcd59234073c29e7f1e3964f53bc3cdae36..eb8d2234309d9466ff9a1c498fdee31a028eafe7 100644
--- a/dist/loaders.js
+++ b/dist/loaders.js
@@ -1,14 +1,15 @@
 "use strict";
+
 /* eslint-disable @typescript-eslint/no-require-imports */
 var __importDefault = (this && this.__importDefault) || function (mod) {
     return (mod && mod.__esModule) ? mod : { "default": mod };
 };
+
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.loadTs = exports.loadTsSync = exports.loadYaml = exports.loadJson = exports.loadJs = exports.loadJsSync = void 0;
-const fs_1 = require("fs");
-const promises_1 = require("fs/promises");
-const path_1 = __importDefault(require("path"));
-const url_1 = require("url");
+const fse = require("fs-extra");
+const path_1 = __importDefault(require("node:path"));
+const url_1 = require("node:url");
 let importFresh;
 const loadJsSync = function loadJsSync(filepath) {
     if (importFresh === undefined) {
@@ -27,7 +28,7 @@ const loadJs = async function loadJs(filepath) {
             return (0, exports.loadJsSync)(filepath, '');
         }
         catch (requireError) {
-            if (requireError.code === 'ERR_REQUIRE_ESM' ||
+            if (requireError.code === 'ERRrequire_ESM' ||
                 (requireError instanceof SyntaxError &&
                     requireError
                         .toString()
@@ -84,7 +85,7 @@ const loadTsSync = function loadTsSync(filepath, content) {
             noEmit: false,
         };
         content = typescript.transpileModule(content, config).outputText;
-        (0, fs_1.writeFileSync)(compiledFilepath, content);
+        (0, fse.writeFileSync)(compiledFilepath, content);
         return (0, exports.loadJsSync)(compiledFilepath, content).default;
     }
     catch (error) {
@@ -92,8 +93,8 @@ const loadTsSync = function loadTsSync(filepath, content) {
         throw error;
     }
     finally {
-        if ((0, fs_1.existsSync)(compiledFilepath)) {
-            (0, fs_1.rmSync)(compiledFilepath);
+        if ((0, fse.pathExistsSync)(compiledFilepath)) {
+            (0, fse.removeSync)(compiledFilepath);
         }
     }
 };
@@ -115,7 +116,7 @@ const loadTs = async function loadTs(filepath, content) {
                 noEmit: false,
             };
             transpiledContent = typescript.transpileModule(content, config).outputText;
-            await (0, promises_1.writeFile)(compiledFilepath, transpiledContent);
+            await (0, fse.writeFile)(compiledFilepath, transpiledContent);
         }
         catch (error) {
             error.message = `TypeScript Error in ${filepath}:\n${error.message}`;
@@ -125,8 +126,8 @@ const loadTs = async function loadTs(filepath, content) {
         return await (0, exports.loadJs)(compiledFilepath, transpiledContent);
     }
     finally {
-        if ((0, fs_1.existsSync)(compiledFilepath)) {
-            await (0, promises_1.rm)(compiledFilepath);
+        if ((0, fse.pathExistsSync)(compiledFilepath)) {
+            await (0, fse.remove)(compiledFilepath);
         }
     }
 };
diff --git a/package.json b/package.json
index a3de7f15c64e1e40b5abc2b8692f0d274736cd4a..f3142d806ae939107fbe7991cdd7cc13379e26c7 100644
--- a/package.json
+++ b/package.json
@@ -82,6 +82,7 @@
     "@vitest/coverage-istanbul": "^0.34.3",
     "cross-env": "^7.0.3",
     "eslint": "^8.48.0",
+    "fs-extra": "^11.2.0",
     "eslint-config-davidtheclark-node": "^0.2.2",
     "eslint-config-prettier": "^9.0.0",
     "eslint-import-resolver-typescript": "^3.6.0",
