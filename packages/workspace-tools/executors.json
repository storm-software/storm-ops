{
  "executors": {
    "typia": {
      "implementation": "./dist/src/executors/typia/executor",
      "schema": "./dist/src/executors/typia/schema.json",
      "description": "Run the `typia` generator to create runtime type validators"
    },
    "tsdown": {
      "implementation": "./dist/src/executors/tsdown/executor",
      "schema": "./dist/src/executors/tsdown/schema.json",
      "description": "Run the `tsdown` build process on a selected project"
    },
    "esbuild": {
      "implementation": "./dist/src/executors/esbuild/executor",
      "schema": "./dist/src/executors/esbuild/schema.json",
      "description": "Run the `esbuild` build process on a selected project"
    },
    "unbuild": {
      "implementation": "./dist/src/executors/unbuild/executor",
      "schema": "./dist/src/executors/unbuild/schema.json",
      "description": "Run the `unbuild` build process on a selected project"
    },
    "clean-package": {
      "implementation": "./dist/src/executors/clean-package/executor",
      "schema": "./dist/src/executors/clean-package/schema.json",
      "description": "Remove configuration files, fields, and scripts for development before publishing package. The executor will remove these unnecessary files and fields to make the distributable package as light as possible (for scenarios like edge computing, limited memory environments, etc.)"
    },
    "size-limit": {
      "implementation": "./dist/src/executors/size-limit/executor",
      "schema": "./dist/src/executors/size-limit/schema.json",
      "description": "Run a size-limit performance test on the project"
    },
    "npm-publish": {
      "implementation": "./dist/src/executors/npm-publish/executor",
      "schema": "./dist/src/executors/npm-publish/schema.json",
      "description": "Publish a package to the NPM registry"
    },
    "cargo-publish": {
      "implementation": "./dist/src/executors/cargo-publish/executor",
      "schema": "./dist/src/executors/cargo-publish/schema.json",
      "description": "Publish a Rust crate to the crates.io registry"
    },
    "cargo-build": {
      "implementation": "./dist/src/executors/cargo-build/executor",
      "schema": "./dist/src/executors/cargo-build/schema.json",
      "description": "Build a Rust project with Cargo Build"
    },
    "cargo-check": {
      "implementation": "./dist/src/executors/cargo-check/executor",
      "schema": "./dist/src/executors/cargo-check/schema.json",
      "description": "Check a Rust project with Cargo Check"
    },
    "cargo-format": {
      "implementation": "./dist/src/executors/cargo-format/executor",
      "schema": "./dist/src/executors/cargo-format/schema.json",
      "description": "Format a Rust project with Cargo Fmt"
    },
    "cargo-clippy": {
      "implementation": "./dist/src/executors/cargo-clippy/executor",
      "schema": "./dist/src/executors/cargo-clippy/schema.json",
      "description": "Lint a Rust project with Cargo Clippy"
    },
    "cargo-doc": {
      "implementation": "./dist/src/executors/cargo-doc/executor",
      "schema": "./dist/src/executors/cargo-doc/schema.json",
      "description": "Create docs for a Rust project with Cargo Doc"
    }
  }
}
