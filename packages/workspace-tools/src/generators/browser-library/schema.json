{
  "$schema": "http://json-schema.org/schema",
  "$id": "browser-library",
  "title": "Add browser Library",
  "description": "Create a new browser TypeScript library package in the Storm workspace",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "A name for the library.",
      "$default": {
        "$source": "argv",
        "index": 0
      },
      "x-prompt": "What name would you like to use for the library?",
      "pattern": "(?:^@[a-zA-Z0-9-*~][a-zA-Z0-9-*._~]*\\/[a-zA-Z0-9-~][a-zA-Z0-9-._~]*|^[a-zA-Z][^:]*)$"
    },
    "description": {
      "type": "string",
      "description": "The library used by Storm Software for building TypeScript applications.",
      "$default": {
        "$source": "argv",
        "index": 2
      },
      "x-prompt": "Provide description to use as a summary of the library?"
    },
    "directory": {
      "type": "string",
      "description": "A directory where the lib is placed.",
      "x-priority": "important"
    },
    "projectNameAndRootFormat": {
      "description": "Whether to generate the project name and root directory as provided (`as-provided`) or generate them composing their values and taking the configured layout into account (`derived`).",
      "type": "string",
      "enum": ["as-provided", "derived"]
    },
    "tags": {
      "type": "string",
      "description": "Add tags to the library (used for linting)."
    },
    "strict": {
      "type": "boolean",
      "description": "Whether to enable tsconfig strict mode or not.",
      "default": true
    },
    "publishable": {
      "type": "boolean",
      "default": false,
      "description": "Generate a publishable library.",
      "x-priority": "important"
    },
    "importPath": {
      "type": "string",
      "description": "The library name used to import it, like @storm-software/my-awesome-lib. Required for publishable library.",
      "x-priority": "important"
    },
    "buildable": {
      "type": "boolean",
      "default": true,
      "description": "Generate a buildable library.",
      "x-deprecated": "Use the `bundler` option for greater control (swc, tsc, rollup, vite, esbuild, none)."
    },
    "setParserOptionsProject": {
      "type": "boolean",
      "description": "Whether or not to configure the ESLint `parserOptions.project` option. We do not do this by default for lint performance reasons.",
      "default": false
    },
    "rootProject": {
      "type": "boolean",
      "default": false,
      "description": "Is the current project the root project in the workspace."
    }
  },
  "required": [
    "name",
    "directory",
    "projectNameAndRootFormat",
    "publishable",
    "importPath",
    "buildable"
  ]
}
