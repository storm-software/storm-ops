
// Generated by @storm-software/untyped
// Do not edit this file directly

export interface UnbuildExecutorSchema {
 /**
  * Output Path
  * 
  * The output path for the build
  * 
  * 
  * @format path
 */
 outputPath?: string,

 /**
  * Input Directory
  * 
  * The directory to use as input for the build
  * 
  * @default ["{sourceRoot}"]
  * 
  * @format path
 */
 entry: Array<string>,

 /**
  * TSConfig Path
  * 
  * The path to the tsconfig file
  * 
  * @default "{projectRoot}/tsconfig.json"
  * 
  * @format path
 */
 tsconfig?: string,

 /**
  * Bundle
  * 
  * Bundle the output
  * 
 */
 bundle?: boolean,

 /**
  * Minify
  * 
  * Minify the output
  * 
 */
 minify?: boolean,

 /**
  * Debug
  * 
  * Debug the output
  * 
 */
 debug?: boolean,

 /**
  * Sourcemap
  * 
  * Generate a sourcemap
  * 
 */
 sourcemap?: boolean,

 /**
  * Silent
  * 
  * Should the build run silently - only report errors back to the user
  * 
  * @default false
 */
 silent?: boolean,

 /**
  * Target
  * 
  * The target to build
  * 
  * @default "esnext"
  * 
  * @enum es3,es5,es6,es2015,es2016,es2017,es2018,es2019,es2020,es2021,es2022,es2023,es2024,esnext,node12,node14,node16,node18,node20,node22,browser,chrome58,chrome59,chrome60
 */
 target?: string,

 /**
  * Format
  * 
  * The format to build
  * 
  * @default ["cjs","esm"]
 */
 format?: Array<string>,

 /**
  * Platform
  * 
  * The platform to build
  * 
  * @default "neutral"
  * 
  * @enum neutral,node,browser
 */
 platform?: string,

 /**
  * External
  * 
  * The external dependencies
  * 
 */
 external?: Array<any>,

 /**
  * Define
  * 
  * The define values
  * 
 */
 define?: Record<string, string>,

 /**
  * Environment Variables
  * 
  * The environment variable values
  * 
 */
 env?: Record<string, string>,

 /**
  * Name
  * 
  * The name of the project/build
  * 
  * @default "{projectName}"
 */
 name: string,

 /**
  * Tree Shaking
  * 
  * Enable tree shaking
  * 
  * @default true
 */
 treeShaking?: boolean,

 /**
  * Watch
  * 
  * Watch for changes
  * 
  * @default false
 */
 watch?: boolean,

 /**
  * Clean
  * 
  * Clean the output directory before building
  * 
  * @default true
 */
 clean?: boolean,

 /**
  * Stub
  * 
  * Stub the output
  * 
  * @default false
 */
 stub?: boolean,

 /**
  * Build Only
  * 
  * Should the build process skip generating a package.json and copying assets
  * 
  * @default false
 */
 buildOnly?: boolean,

 /**
  * Watch Options
  * 
  * Watch options
  * 
 */
 watchOptions?: {
  [key: string]: any
 },

 /**
  * Stub Options
  * 
  * Stub options
  * 
 */
 stubOptions?: {
  [key: string]: any
 },

 /**
  * Dependencies
  * 
  * The dependencies to install
  * 
 */
 dependencies?: Array<string>,

 /**
  * Peer Dependencies
  * 
  * The peer dependencies to install
  * 
 */
 peerDependencies?: Array<string>,

 /**
  * Dev Dependencies
  * 
  * The dev dependencies to install
  * 
 */
 devDependencies?: Array<string>,

 /**
  * Alias
  * 
  * The alias to use
  * 
 */
 alias?: Record<string, string>,

 /**
  * Replace
  * 
  * The replace to use
  * 
 */
 replace?: Record<string, string>,

 /**
  * Rollup
  * 
  * The rollup options
  * 
 */
 rollup?: {
  [key: string]: any
 },
}

